{"ast":null,"code":"var _jsxFileName = \"/Users/maximecourte/Documents/React/client-crm-hdm/src/Components/Inscription/Inscription.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport NavBar from \"../Navbar/Navbar\";\nimport \"./Inscription.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Inscription() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const navigate = useNavigate();\n  const validateEmail = email => {\n    const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return re.test(email);\n  };\n  const handleEmailChange = e => {\n    setEmail(e.target.value);\n    if (!validateEmail(e.target.value)) {\n      setEmailError(\"Email non valide\");\n    } else {\n      setEmailError(\"\");\n    }\n  };\n  const handleNameChange = e => {\n    setName(e.target.value);\n  };\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Vérifie si tous les champs sont remplis \n    if (email && password && name && !emailError) {\n      navigate(\"/connexion\");\n    } else {\n      alert(\"Veuillez remplir tous les champs pour valider l'inscription.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Inscription\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"inscription-title\",\n        children: \"Inscription\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"inscription-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"nom\",\n          type: \"text\",\n          name: \"name\",\n          value: name,\n          onChange: handleNameChange,\n          className: \"inscription-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"email\",\n          type: \"text\",\n          name: \"email\",\n          value: email,\n          onChange: handleEmailChange,\n          className: \"inscription-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), emailError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"email-error\",\n          children: emailError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"********\",\n          type: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: handlePasswordChange,\n          className: \"inscription-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"cree mon compte\",\n          className: \"inscription-submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Inscription, \"F5LjFZIFIG8D4pxNUfk6vTFtGUQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Inscription;\nvar _c;\n$RefreshReg$(_c, \"Inscription\");","map":{"version":3,"names":["React","useState","useNavigate","NavBar","jsxDEV","_jsxDEV","Fragment","_Fragment","Inscription","_s","email","setEmail","password","setPassword","name","setName","emailError","setEmailError","navigate","validateEmail","re","test","handleEmailChange","e","target","value","handleNameChange","handlePasswordChange","handleSubmit","preventDefault","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","placeholder","type","onChange","_c","$RefreshReg$"],"sources":["/Users/maximecourte/Documents/React/client-crm-hdm/src/Components/Inscription/Inscription.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport NavBar from \"../Navbar/Navbar\";\nimport \"./Inscription.css\"\nexport default function Inscription()\n{\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [emailError, setEmailError] = useState(\"\");\n    const navigate = useNavigate();\n\n    const validateEmail = (email) => {\n        const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return re.test(email);\n      };\n      \n\n    const handleEmailChange = (e) => {\n        setEmail(e.target.value);\n        if (!validateEmail(e.target.value)) {\n            setEmailError(\"Email non valide\");\n        } else {\n            setEmailError(\"\");\n        }\n    }\n\n    const handleNameChange = (e) => {\n        setName(e.target.value);\n    }\n\n    const handlePasswordChange = (e) => {\n        setPassword(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // Vérifie si tous les champs sont remplis \n        if (email && password && name && !emailError) {\n            navigate(\"/connexion\");\n        } else {\n            alert(\"Veuillez remplir tous les champs pour valider l'inscription.\");\n        }\n    }\n\n    return(\n        <>\n            <NavBar/>\n        <div className=\"Inscription\">\n            <h1 className=\"inscription-title\">Inscription</h1>\n            <form onSubmit={handleSubmit} className=\"inscription-form\">\n               \n                    <input placeholder=\"nom\" type=\"text\" name=\"name\" value={name} onChange={handleNameChange} className=\"inscription-input\" />\n              \n                  \n                    <input placeholder=\"email\" type=\"text\" name=\"email\" value={email} onChange={handleEmailChange} className=\"inscription-input\" />\n                    {emailError && <p className=\"email-error\">{emailError}</p>}\n               \n                   \n                    <input placeholder=\"********\" type=\"password\" name=\"password\" value={password} onChange={handlePasswordChange} className=\"inscription-input\" />\n               \n                <input type=\"submit\" value=\"cree mon compte\" className=\"inscription-submit\" />\n            </form>\n        </div>\n\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}